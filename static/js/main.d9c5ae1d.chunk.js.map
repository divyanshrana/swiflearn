{"version":3,"sources":["components/youtube.webp","components/live.ico","components/navbar.js","components/footer.js","components/testslider.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ButtonAppBar","className","style","width","display","flexWrap","marginTop","fontSize","marginBottom","color","height","src","liveIcon","alt","Footer","tabIndex","TestSlider","useState","current","setCurrent","useEffect","document","getElementById","focus","onClick","e","target","type","refId","closest","id","toString","set","parseInt","str","left","youtube","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d9c5ae1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/youtube.4aac3d23.webp\";","module.exports = __webpack_public_path__ + \"static/media/live.6544b101.ico\";","import React from \"react\";\r\nimport liveIcon from \"./live.ico\";\r\n\r\nexport default function ButtonAppBar() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <span\r\n        style={{\r\n          width: \"140px\",\r\n          display: \"flex\",\r\n          flexWrap: \"wrap\",\r\n          marginTop: \"-40px\",\r\n        }}\r\n        className=\"nav-item\"\r\n      >\r\n        <span\r\n          style={{ fontSize: \"12px\", marginBottom: \"5px\" }}\r\n          className=\"smallText\"\r\n        >\r\n          Upcoming\r\n          <span style={{ color: \"orange\" }}>{\" ( \"}</span>\r\n          <img\r\n            style={{ width: \"10px\", height: \"10px\" }}\r\n            src={liveIcon}\r\n            alt=\"live-icon\"\r\n          />\r\n          <span style={{ color: \"orange\" }}>{\" )\"}</span>\r\n        </span>\r\n        Live Consultation\r\n      </span>\r\n      <span className=\"nav-item\">Buy Plans</span>\r\n      <span className=\"nav-item\">View Plans</span>\r\n      <button className=\"login nav-item\">Login</button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./footer.css\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <li tabIndex=\"1\">\r\n        <div>5</div>\r\n        <span></span>\r\n      </li>\r\n      <li tabIndex=\"1\">\r\n        <div>6</div>\r\n        <span></span>\r\n      </li>\r\n      <li tabIndex=\"1\">\r\n        <div>7</div>\r\n        <span></span>\r\n      </li>\r\n      <li tabIndex=\"1\">\r\n        <div>8</div>\r\n        <span></span>\r\n      </li>\r\n      <li tabIndex=\"1\">\r\n        <div>9</div>\r\n        <span></span>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./slider.css\";\r\nimport youtube from \"./youtube.webp\";\r\nexport default function TestSlider() {\r\n  const [current, setCurrent] = useState(\"4\");\r\n\r\n  useEffect(() => {\r\n    document.getElementById(current).focus();\r\n  }, [current]);\r\n\r\n  function left() {\r\n    if (parseInt(current) > 1) {\r\n      let str = (parseInt(current) - 1).toString();\r\n      setCurrent(str);\r\n    } else {\r\n      document.getElementById(current).focus();\r\n    }\r\n  }\r\n  function right() {\r\n    if (parseInt(current) < 5) {\r\n      setCurrent((parseInt(current) + 1).toString());\r\n    } else {\r\n      document.getElementById(current).focus();\r\n    }\r\n  }\r\n  function set(e) {\r\n    if (e.target.type === \"submit\") {\r\n      return;\r\n    }\r\n    let refId = e.target.closest(\"div\").id.toString();\r\n    setCurrent(refId);\r\n  }\r\n  return (\r\n    <div\r\n      onClick={(e) => {\r\n        set(e);\r\n      }}\r\n      className=\"cards\"\r\n    >\r\n      <button\r\n        className=\"navigate nav-left\"\r\n        onClick={() => {\r\n          left();\r\n        }}\r\n      >\r\n        {\"<\"}\r\n      </button>\r\n      <div tabIndex=\"1\" className=\"card\" id=\"1\">\r\n        <img className=\"yt-img\" src={youtube} alt=\"yt-logo\" />\r\n        <p>This is some content</p>\r\n      </div>\r\n      <div tabIndex=\"2\" className=\"card\" id=\"2\">\r\n        <img className=\"yt-img\" src={youtube} alt=\"yt-logo\" />\r\n        <p>This is some content</p>\r\n      </div>\r\n      <div tabIndex=\"3\" className=\"card\" id=\"3\">\r\n        <img className=\"yt-img\" src={youtube} alt=\"yt-logo\" />\r\n        <p>\r\n          See what<span style={{ color: \"orange\" }}> Leena Barua </span>\r\n          thinks\r\n          <br />\r\n          about our plans\r\n        </p>\r\n      </div>\r\n      <div tabIndex=\"4\" className=\"card\" id=\"4\">\r\n        <img className=\"yt-img\" src={youtube} alt=\"yt-logo\" />\r\n        <p>This is some content</p>\r\n      </div>\r\n      <div tabIndex=\"5\" className=\"card\" id=\"5\">\r\n        <img className=\"yt-img\" src={youtube} alt=\"yt-logo\" />\r\n        <p>This is some content</p>\r\n      </div>\r\n      <button\r\n        className=\"navigate nav-right\"\r\n        onClick={() => {\r\n          right();\r\n        }}\r\n      >\r\n        {\">\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport ButtonAppBar from \"./components/navbar.js\";\nimport Footer from \"./components/footer.js\";\nimport TestSlider from \"./components/testslider.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ButtonAppBar className=\"nav\" />\n      <div className=\"area\">\n        <div className=\"padd\">\n          <span className=\"title\">Concept Videos</span>\n          <br />\n          <span className=\"smallText\">Select a number</span>\n        </div>\n        <div className=\"center\">\n          <TestSlider />\n        </div>\n        <div className=\"padd\">\n          <span className=\"title\">Live Classes</span>\n          <br />\n          <span className=\"smallText\">Select a number</span>\n        </div>\n        <div className=\"center\">\n          <Footer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}